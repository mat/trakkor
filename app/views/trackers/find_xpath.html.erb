<h2>Testing range</h2>

<ol>
<li>Use either XPath Checker or XPather to obtain an XPath for the desired element. If you're lucky this Moduri recognizes this XPath an yields the edsired text.</li>
<li>Use the brute force HTML diving method and locate the text with your browser's search funtion.</li>
<li>Use the trial and error approach until it works.</li>
</ol>


<% form_tag find_xpath_path, :method => :get, :class => 'cmxform' do -%>
<ul>
 <li><label for="name">URI </label><%= text_field_tag 'uri', @uri, :size => 80 %></li>
 <li><label for="search">Find text</label><%= text_field_tag 'search', @search, :size => 80 %> </li>

 <li><%= submit_tag 'Find again' %>
<% end -%>


</li>



</ul>


<p style="color: red"><%= flash[:error] %></p>
<p style="color: green"><%= flash[:notice] %></p>
<p style="color: yellow"><%= flash[:hint] %></p>

<%= error_messages_for :tracker %>

<ul>

<% if @hits %>
<p style="color: green">Found <%= @hits.size %> hits:</p>

<%- @hits = @hits.sort_by{|h| h.inner_text.length}%>

<% for hit in @hits %>
<li> <span><%= h(hit.xpath) %></span>
<a href='<%=  url_for(:action => 'test_xpath', :uri => @uri, :xpath => hit.xpath)  %>'>Proceed</a>

<pre>
<%= Piece.tidy_text(hit.inner_text).gsub(/(#{Regexp.escape(@search)})/i, "<strong class='highlightsearch'>\\1</strong>") %>
</pre>

</li>

<% end %>
</ul>
<% end %>

