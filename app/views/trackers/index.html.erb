
<h2>Wanted: URI and XPath</h2>

Trackin whole web pages is easy, blabla, many pages already provide RSS or Atom feeds. But sometimes you just want to track changes to a single page element, for example a price for an item or. blabla
<h2>Start tracking</h2>

<%= error_messages_for :tracker %>

<% 
 example_uri ='http://localhost:8808/doc_root/libxml-ruby-0.5.3/rdoc/classes/XML/Node.html' 
 example_uri ='http://example.com'
 example_xpath = '//title/text()'
 example_search = 'example'
-%>


<div class="box">
<h2>Start tracking</h2>
<p>Enter a Webpage adress and the text you want to track.</p>
<form action="" method="post">
<label><span>URI</span>
<input type="text"name="email" id="email" class="input-text"/>
</label>
<label><span>Password</span>
<input type="password"name="psw" id="psw" class="input-text"/>
</label>
</form>
<div class="spacer"><a href="#" onClick="" class="green">Sign in</a></div>
</div>
</div>


<% form_tag find_xpath_path, :method => :get, :class => 'cmxform' do -%>
<ul>
 <li><label for="name">URI </label><%= text_field_tag 'uri', example_uri, :size => 80 %></li>
 <li><label for="q">Find text</label><%= text_field_tag 'q', example_search, :size => 80 %> </li>

 <li><%= submit_tag 'Test and track' %></li>
</ul>
<% end -%>



<h2>Live examples</h2>

<table class='examples'>

<% for tracker in @trackers %>
  <tr>

    <td><a href="<%= "#{url_for(tracker)}.atom" %>"><%= image_tag("06.png", :alt => "Tracker Feed for #{tracker.uri}") %></a></td>
    <td><%= link_to "#{tracker.name}", tracker_path(tracker) %></td>
    <td class='piece'><%= tracker.last_change.text %></td>
    <td>updated <%= relative_time(tracker.last_change.created_at) %></td>
  </tr>
<% end %>


<!--
  <tr>
   <td></td>
   <td colspan="2"><%= link_to "more...", { :action => "examples" } %> </td>
  </tr>
!-->
</table>

<br />

<h2>What it is not</h2>
<p>
Trakkor is just a change tracker for single web page elements which happens to present its findings via Atom feeds and Jabber messages. That is what it's good at.
</p>

But Trakkor is certainly...

<ul>
  <li>...not a tool to create Atom feeds for web sites which don't publish an Atom feed but probably should.</li>
  <li>...not good at recognizing the structure of the HTML pieces it scrapes out of a document. That's why it treats those pieces as raw strings: If one character changes, it differs for Trakkor.</li>
</ul>

It's really just a change tracker, believe me. As always, your mileage may vary.

<h2>Caveats</h2>

Finding an appropriate XPath that describes the desired page element page can be difficult and is the trickiest part of using Trakkor: I suggest using either the <a href="https://addons.mozilla.org/en-US/firefox/addon/1192">XPather</a> or <a href="https://addons.mozilla.org/en-US/firefox/addon/1095">XPath Checker</a> Firefox plugins. Both allow you to right-click a page element and give you an XPath that describes it. 

<h2>FAQ</h2>

 <ul id='faq'>
   <li class='q'>I try to fetch the //head/style element but cannot fetch the content.</li>
   <li class='q'>Were animals or software tools hurt during the creation of Trakkor?</li>
   <li class='a'>Trakkor is written in <a href='http://ruby-lang.org' target='_blank'>Ruby</a> and uses <a href='http://rubyonrails.com' target='_blank'>Ruby on Rails</a>. Behind the scenes cron, <a href='http://www.sqlite.org' target='_blank'>SQLite</a> and <a href='http://code.whytheluckystiff.net/hpricot/' target='_blank'>Hpricot</a> are heavily abused, but certainly not hurt. No anmials have been hurt.</li>
 <ul>
